#!/bin/bash

# Exit immediately on errors, and echo commands as they are executed.
set -ex

TERMINUS_ENV_LABEL=${TERMINUS_ENV_LABEL:-$TERMINUS_ENV}

# Support for multiple CI platforms
CI_BUILD_REF=${CI_BUILD_REF:-$CIRCLE_SHA1}
IS_CI=${CI:-$CI_SERVER}

# Set the $PATH to include the global composer bin directory.
PATH=$PATH:~/.composer/vendor/bin

# Add a remote named 'pantheon' to point at the Pantheon site's git repository.
# Skip this step if the remote is already there (e.g. due to CI service caching).
git remote show | grep -q pantheon || git remote add pantheon $(terminus site connection-info --field=git_url --env=dev)
git fetch pantheon

# Run 'composer install' or 'composer update', depending on whether the
# composer.json is newer than or older than the composer.lock file.
if [ $(git log -1 --format="%at" -- composer.json) -gt $(git log -1 --format="%at" -- composer.lock) ] ; then
  composer update --optimize-autoloader
else
  composer install --optimize-autoloader
fi
composer drupal-scaffold

# Run the build step, if any
composer build-assets

# Get rid of any .git directories created by composer
rm -rf $(find * -name ".git")

# Alter .gitignore file for Pantheon. Everything above ":: cut ::" line
# is removed, so that we can commit our build assets to the Pantheon
# repository, but not commit them to the GitHub repository
sed -i -e '1,/^# ::* cut ::*$/d' .gitignore

# If we are testing against the dev environment, then simply force-push our build results to the master branch and exit.
if [ "$TERMINUS_ENV" == "dev" ]
then
  terminus site set-connection-mode --mode=sftp
  PANTHEON_SITE_ID=$(terminus site info --field=id)
  rsync -rlIvz --ipv4 --exclude=.git -e 'ssh -p 2222' ./ $TERMINUS_ENV.$PANTHEON_SITE_ID@appserver.$TERMINUS_ENV.$PANTHEON_SITE_ID.drush.in:code/
  exit 0
fi

# Create a new branch and commit the results from anything that may have changed
git checkout -B $TERMINUS_ENV
git add -A .
git commit -q -m "Build assets for $TERMINUS_ENV_LABEL."

# Push the branch to Pantheon, and create a new environment for it
git push -q pantheon $TERMINUS_ENV

# Create a new environment for this test.
terminus site create-env --to-env=$TERMINUS_ENV --from-env=dev
terminus site set-connection-mode --mode=sftp

# If called from CI, then add a comment containing a link to the test environment.
# Turn off command echoing here.
set +x
if [ -n "$CI" ] ; then
  SITE_ID=$(terminus site info --field=id)
  DASHBOARD="https://dashboard.pantheon.io/sites/$SITE_ID#$TERMINUS_ENV"
  comment="Created multidev environment [$TERMINUS_SITE#$TERMINUS_ENV]($DASHBOARD)."
  visit_site="[![Visit Site](https://raw.githubusercontent.com/pantheon-systems/ci-drops-8/0.1.0/data/img/visit-site-36.png)](https://$TERMINUS_ENV-$TERMINUS_SITE.pantheonsite.io/)"

  if [ -n "$GITHUB_TOKEN" ] ; then
    curl -d '{ "body": "'"$comment\\n\\n$visit_site"'" }' -X POST https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commits/$CIRCLE_SHA1/comments?access_token=$GITHUB_TOKEN
  elif [ -n "$GITLAB_TOKEN" ] ; then
    curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" --form "note=$comment\\n\\n$visit_site" -X POST https://gitlab.com/api/v3/projects/$CI_PROJECT_ID/repository/commits/$CI_BUILD_REF/comments
  fi

  echo $comment
  echo
  echo $visit_site
fi

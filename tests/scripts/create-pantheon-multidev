#!/bin/bash

# Exit immediately on errors, and echo commands as they are executed.
set -ex

# Set the $PATH to include the global composer bin directory.
PATH=$PATH:~/.composer/vendor/bin

# Run 'composer install' or 'composer update', depending on whether the
# composer.json is newer than or older than the composer.lock file.
if [ $(git log -1 --format="%at" -- composer.json) -gt $(git log -1 --format="%at" -- composer.lock) ] ; then
  composer update --optimize-autoloader
else
  composer install --optimize-autoloader
fi
composer drupal-scaffold

# Run the build step, if any
composer build-assets

# Add a remote named 'pantheon' to point at the Pantheon site's git repository.
# Skip this step if the remote is already there (e.g. due to CI service caching).
git remote show | grep -q pantheon || git remote add pantheon $(terminus site connection-info --field=git_url --env=dev)
git fetch pantheon

# Create a new branch and commit the results from anything that may have changed
git checkout -b $TERMINUS_ENV
git add -A .
git commit -m "Prepare for test $CIRCLE_BUILD_NUM."
git push pantheon $TERMINUS_ENV

# Create a new environment for this test.
terminus site create-env --to-env=$TERMINUS_ENV --from-env=dev
terminus site set-connection-mode --mode=sftp

# Import configuration if it exists in the `config` directory
if [ -f config/system.site.yml ] ; then
  terminus drush 'config-import --yes'
fi

# If called from Circle CI, then add a comment containing a link to the test environment.
# Turn off command echoing here.
set +x
if [ -n "$CIRCLE_SHA1" ] && [ -n "$GITHUB_TOKEN" ] ; then
  SITE_ID=$(terminus site info --field=id)
  DASHBOARD="https://dashboard.pantheon.io/sites/$SITE_ID#$TERMINUS_ENV"
  export comment="Created multidev environment for test $CIRCLE_BUILD_NUM: [$TERMINUS_ENV](http://$TERMINUS_ENV-$TERMINUS_SITE.pantheonsite.io/) in site [$TERMINUS_SITE]($DASHBOARD)."
  echo $comment
  curl -d '{ "body": "'"$comment"'" }' -X POST https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commits/$CIRCLE_SHA1/comments?access_token=$GITHUB_TOKEN
fi

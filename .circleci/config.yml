# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
defaults: &defaults
  docker:
    - image: quay.io/pantheon-public/build-tools-ci:4.x
  working_directory: ~/example_drops_8_composer
  environment:
    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/env-vars/
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GIT_EMAIL:      The email address to use when making commits
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:    The email address to give the admin when installing.
    #=========================================================================
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"

    # The variables below usually do not need to be modified.

    #======================================================================================================================================
    # Circle CI 2.0 does not yet expand environment variables so they have to be manually EXPORTed
    # Once environment variables can be expanded the variables below can be uncommented and the EXPORTs in set-up-globals.sh can be removed
    # See: https://discuss.circleci.com/t/unclear-how-to-work-with-user-variables-circleci-provided-env-variables/12810/11
    # See: https://discuss.circleci.com/t/environment-variable-expansion-in-working-directory/11322
    # See: https://discuss.circleci.com/t/circle-2-0-global-environment-variables/8681
    #======================================================================================================================================

    NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    ADMIN_USERNAME: admin
    # BUILD_TOOLS_VERSION: ^2.0.0-alpha4
    TERM: dumb

version: 2
jobs:
    # @todo: common initialization: 'composer install' for the site-under-test
    build:
        <<: *defaults
        steps:
            - checkout

            - restore_cache:
                keys:
                    - composer-cache
                    - terminus-install

            - run:
                # Set TERMINUS_ENV and related environment variables.
                # https://github.com/pantheon-systems/docker-build-tools-ci/blob/1.x/scripts/set-environment
                name: environment
                command: /build-tools-ci/scripts/set-environment

            - run:
                name: run composer install to get the vendor directory
                command: composer install

            - save_cache:
                key: composer-cache
                paths:
                    - $HOME/.composer/cache

            - save_cache:
                key: terminus-install
                paths:
                    - $(TERMINUS_PLUGINS_DIR:-~/.terminus/plugins)

            - run:
                name: lint php code for syntax errors
                command: composer -n lint

            - run:
                name: check coding standards
                command: composer -n code-sniff

            - run:
                name: run unit tests
                command: composer -n unit-test

    build_deploy_and_test:
        <<: *defaults
        steps:
            - checkout

            - restore_cache:
                keys:
                    - composer-cache
                    - terminus-install

            - run:
                # Set TERMINUS_ENV and related environment variables.
                # https://github.com/pantheon-systems/docker-build-tools-ci/blob/1.x/scripts/set-environment
                name: dependencies
                command: /build-tools-ci/scripts/set-environment

            - run:
                name: install dev dependencies, build assets, etc.
                command: ./.circleci/scripts/pantheon/01-prepare

            - run:
                name: build assets
                command: composer -n build-assets

            - run:
                name: prepare database for site-under test
                command: ./.circleci/scripts/pantheon/02-init-site-under-test-clone-existing
                # command: ./.circleci/scripts/pantheon/02-init-site-under-test-reinstall-new

            - run:
                name: run composer install again to get dev dependencies
                command: composer install

            - run:
                name: run functional tests with Behat
                command: ./tests/scripts/run-behat

            - run:
                name: post-test actions
                command: ./.circleci/scripts/pantheon/03-post-test

            - run:
                name: handle merge to master (if needed)
                command: ./.circleci/scripts/pantheon/04-merge-master

            - run:
                name: remove transient test fixtures
                command: ./.circleci/scripts/pantheon/09-cleanup-fixtures

workflows:
  version: 2
  build_and_test:
    jobs:
      # Install dev dependencies and do simple tests (sniff, unit tests, etc.)
      - build
      # Build deploy and test on target platform
      - build_deploy_and_test
